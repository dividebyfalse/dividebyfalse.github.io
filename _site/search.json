[

{
"id": "-2016-07-31-get-it-done",
"title": "Тайм-Memеджмент",
"author": null,
"tags": ["library"],
"url": "/2016/07/31/get-it-done/",
"date": "2016-07-31",
"content": "Пожалуй, уже 3 года я практикую такое популярное сегодня занятие, уступающее сейчас разве что ловле покемонов, как прокрастинация. За это время у меня она эволюционировала из «посидеть в социалочках», «поиграть в компьютер» в «общественную деятельность», «поиграть на гитарке/флейте» и «посмотреть, почему дельфин: животное-буддист» и т.д. Да, это уже лучше. Всестороннее развитие сделает вас «интересной личностью»… но это не ведёт к достижению цели. На этом я не остановился и в конце концов дошел до того, что прокрастинировал, занимаясь поисками лекарства от прокрастинации. А над головой так же висят проекты, которые давно пора бы уже сделать…Чем лечить будем?  Моя любовь к продуктивности превратилась в зависимость, и система организации сама по себе стала тратой времени.Больше всего я люблю прокрастинировать, жалуясь.Откладывание на потом называют прокрастинацией (или как говорит Вики «завтрачеством» или «напотомством»). Это слово в некоторых кругах уже стало ругательным. С ним по соседству постоянно часто обитают «тайм-менеджмент», «целеустремленность», «личная эффективность», «успешность», «продуктивность»… Если вас ещё не тошнит, и вы знаете больше примеров, то прошу, составьте бинго. С некоторыми я бы с удовольствием поиграл.Глупо думать, что это у меня одного проблема с организацией и ещё глупее считать, что человечество не пытается с ней бороться. Тем более, что вокруг этого не слабый ажиотаж. А кто-то вообще называют завтрачество чумой 21 века.  Вы взяли эту книгу не потому, что просто любите читать (иначе придется констатировать, что у вас довольно странный вкус).Появилось много людей, которые предлагают якобы «суперэффективные» методики и пишут книги, заваливая и без того полные шлака полки с литературой для бизнеса. Да, на литературу по тайм-менеджменту страшно смотреть. Названия этих книг отталкивают снобов и притягивают предприимчивых мальчишек с великими идеями, которые пришли им за чашкой смузи. Однако такая литература есть. И вместо того, чтобы постоянно пробегать мимо этой полки прямо к Пелевиным, Кафкам и Буковски, может разочек стоит остановиться и попробовать почитать?Подобным вопросом я и задался. Вспомнил одну книжку, которую хотел прочесть давным-давно и, не поверите, начал её читать. Называется она «Долой продуктивность» Стивера Роббинса… Стоп. Как долой?Фи. ПродуктивностьВсе мы любим отдыхать. И все мы очень ленивы. Оттого и популярна фраза «Лень - двигатель прогресса». Стивер Роббинс тоже человек и он просто обожает отдыхать и играть в компьютерные игры. Но при всём при этом он написал книгу, запустил 10 стартапов, ведёт популярный подкаст в iTunes и успевает консультировать гигантов бизнеса. Не очень плохо живет, в общем-то.  …изобрели внушительное слово продуктивность, что неожиданно наделало много шума. К концу 1980-х продуктивность превратилась в государственную религию. Хочешь победить в споре? Просто скажи: «Моя задумка сделает нас продуктивнее». Идея продуктивности, ставшая своего рода святым Граалем, завладела умами настолько, что, услышав подобное заявление, оппоненты сложат оружие, склонят головы и отступят.Стивер с самого начала между строк говорит нам, что иди ты куда подальше со своими продуктивностями. Эту книгу он написал для тех, кто хочет жить в удовольствие, а не для тех, кто ищет, как освободить время, чтобы нагрузить себя ещё сильнее. Девиз книги, который повторяется неоднократно - «Работай меньше, успевай больше». И автор говорит, как, по его мнению, можно этого добиться. Советов уйма. И они охватывают много сфер жизни.Обо всём и сразуАвтор взял на себя тяжелую ношу, рассказать сразу и обо всём ( прямо как мой блог)0) ). И у него неплохо это получается. От абстрактных и психологических советов по осознанной жизни и концентрации он легко переходит к советам по бумажной работе, уборке в доме или работы с почтой. Книга разделена на 9 шагов, которые подробно описываются.Читая, постоянно проскакивают мысли начиная от «Жиза» и «Хм, надо попробовать» до «Да что ты несёшь?» и обратно. Есть практические советы с которыми ты согласен, есть те, которые хочется скорее применить, и те, которые покажутся устаревшими или бесполезными. Но так ли это на деле? Лично мне не нужны советы по работе с папками, да и почта у меня не такая загруженная, но эту книгу и не писали для конкретного человека. Не исключайте и того, что эти знания могут пригодиться в будущем.Такой широкий охват всего и вся конечно не очень хорошо сказывается на восприятии повествования. Оно показалось мне сумбурным. Но благо в конце каждого Шага автор предусмотрел блок с основными тезисами. Это помогает структурировать прочитанное. К тому же всю книгу автор строит на забавных и запоминающихся примерах. Хотите армию управляемых зомби? В книге практически расписано руководство по её созданию!Меньше думайЯ много выписал полезного для себя. И если всё выложить сюда, то это займет много места. Да и ни к чему это. Но вот этим хочется поделиться.Думать - утомительно. Хорошо об этом рассказывает вот этот крутой чувак. Когда мы думаем, то расходуем энергию. Но какую? Мне очень нравится термин “мыслетопливо” (который я подсмотрел у чуть менее крутого чувака). Так вот этого мыслетоплива у нас не так много(хотя это поправимо), и как только оно расходуется, то и начинаются все беды. В книге Роббинса очень много советов направлены на то, чтобы меньше думать. Важно принимать решения однажды и записывать его. А при случае пользоваться тем, о чем уже подумал.ЦитатыЕсли сам начну писать о всём, что мне понравилось, то это затянется. Так что вот немного цитат, чтобы вас заинтересовать.  Для начала вам нужен друг. Подойдет любой. Если друга нет, заведите его.  Если вы собираетесь заставить людей думать о вас, пусть думают с любовью.  Вы наверняка боитесь, что обидите людей, не отвечая на их письма. Возможно. А может быть, и нет.  Учитесь говорить «нет»Гораздо лучше говорить «да» самому себе.  Если сомневаетесь, выбрасывайте.  Самый чудесный способ работать меньше – позволить кому-то другому делать работу за вас.  Найдите кандидатов на делегирование и делегируйте, делегируйте, делегируйте!  Дарить лучше, чем получать.РезюмеМы живем в обществе (вот сюрприз да?). И потуги, направленные на осознанную и, простите, продуктивную жизнь обречены, если игнорировать этот очевидный факт. Межличностным отношениям в книге тоже уделено много внимания. На это даже выделен отдельный Шаг. И за этот шаг я полюбил эту книгу. Личные наблюдения, которые помогают мне строить отношения с людьми, совпали с авторскими советами. И важно то, что книга не делает акцент на том, чтобы сделать из вас мегаэффективную машину. Она концентрируется на том, чтобы привнести в вашу жизнь осознанности и дать вам времени наслаждаться жизнью.Книга не откровение и не шедевр. В середине меня даже посещали мысли бросить её читать, потому что там некоторые советы мне казались (да и сейчас кажутся) ужасными. К тому же пройдет ещё немало времени, пока я смогу внедрить некоторые советы в повседневную жизнь. Но, не смотря на это, отношение к этой теме у меня сильно изменилось и теперь завтрачество мне не кажется такой серьёзной проблемой, которая приносит уныние и депрессию.Рекомендую прочитать эту книгу. Она небольшая, и не отнимет у вас много времени. Начните сейчас. Сегодня хороший день чтобы начать! Понедельник, 1-ое число. А я пока пойду, сыграю на гитаре любимую песню."
}, 

{
"id": "-2016-07-24-exalarm",
"title": "Лайкни бывшую(ого) в инстаграм. Часть 1",
"author": null,
"tags": ["ios", "swift", "draft"],
"url": "/2016/07/24/exalarm/",
"date": "2016-07-24",
"content": "AttentionВ iOS 10 будет обновленный механизм уведомлений, поэтому данный цикл постов потерял актуальность во время написания. Так что отложу до выхода iOS 10. А пока можете поглядеть, как это могло бы быть на  iOS 9.3. Кстати вводится новый тег #draft. Обозначает посты, которые недописаны, и не имеют мотивов быть дописаными, но выложить хочется. Именно поэтому данный пост часто скатывается к набору картинок и кода. Потому что подробно объяснять нет смысла, так как многое изменится. Орфография, пунктуция и прочее сохранены с момента получения информации об iOS 10. Добавлены лишь небольшие комментарии. Так что возможно много ошибок и мусора в тексте.И ещё. Для тех, кто хоть чуточку шарит, достаточно будт глянуть код (которого вот прям совсем чуть-чуть) и не читать многобукв.ВступлениеПосле нескольких безуспешных попыток быстро подружиться с iOS + Objective-C, было решено не насиловать этот труп. Временем я своим дорожу и потому жалею, что не понял этого ранее. Ну и как догадались читатели “в теме”, я принялся изучать iOS + Swift.Никогда не знаешь, где можешь подхватить идею приложения для тренировки. В этот раз помог твиттер. Буду делать будильник, который ставит лайк бывшей в инстаграмм, при нажатии на кнопку “Отложить на 5 минут”. Помимо этой простой киллерфичи есть идея добавить и другие методы борьбы с “сонями”. Например снимать по 10 рублей за каждое “откладывание на 5 минут” хе-хе. Пока не знаю на сколько это реализуемо (через внутренние покупки/подписку или через платные смс)  Идей на самом деле много, но о них потом.Всё что описывается ниже написано в XCode 7.3.1 и протестировано на эмуляторе с iOS 9.3. В самом первом посте я говорил, что буду всё очень подробно описывать. С тех пор планы не изменились. Это первая часть из…нескольких. Посмотрим как пойдёт.Постановка задачи  Разработать будильник который ставит лайк бывшей девушке либо бывшему парню в инстаграм при клике на кнопку “Отложить на 5 минут”.  Выложить всё это дело в AppStore. Потому что мне не на ком пробовать :)0)Для такого простого приложения здесь достаточно мелких задач, которые задействуют много сторон разработки приложений. Тут и хранение данных, и работа с внешним API, и механизм нотификаций iOS (уведомления, которые всех уже достали), ну и конечно же основы работы с контроллерами, вьюшками и обработчиками событий. В общем, если вы совсем ноль, то надеюсь данный цикл статей поможет вам немножк втянуться в iOS разработку. Желательно конечно иметь опыт хоть какого-нибудь программирования. Но я буду стараться писать ОЧЕНЬ подробно, надеюсь что не зря (всё-таки зря ).В данном посте будет рассмотрено устройство наипростейшего будильника, который только и может, что ставить напоминалку со звуком на определённое время.Шаг 0. В добрый путь.Счастливый ли вы обладатель устройства с Mac OS, или красноглазый пользователь Hackintosh - неважно. Дуй ставить последний XCode. Как же я быстро перешёл на ты однако.Что? Тебе лень обновляться? Ну тогда пиздуй отсюда. Я сказал последний! Ты ещё не работаешь в старой и большой компании, чтобы пользоваться древними инструментами только потому, что нужно поддерживать старые продукты.Последний XCode и тот, что указан в этом посте различаются? Ну чтож, добро пожаловать в жестокий мир программистов. Велика вероятность того, что код, приведенный в данном посте не будет работать (как в воду глядел бля). Что делать в таком случае? Уткнуться в подушку и плакать. Гуглить и СПРАШИВАТЬ у других людей. Если не гуглится, то по-хорошему лучше задать вопрос на stackoverflow, чтобы другим было проще. Но бывает, что нет времени ждать ответа там, и на помощь приходят мессенджеры и тематические чатики. Но помни, что канал об аниме уже не патчит. Полно живых тематических каналов в том же Telegram, ну или если хочешь почуствовать себя кулцхакером и знаешь английский, то заходи в IRC. Ньюфаги плюются, старпёры текут. IRC живее всех живых ещё. Да и взрослее/мудрее к тому же. Что-то я отвлёкся малёх. У нас впереди много работы.Шаг 1. Создаём проект.XCode поставили/обновили. Запускаем, и видим следующее окошко.Рис. 1Погнали по порядку.  Песочница. Позволяет быстро попробовать написать что-то на Swift. Для шарящих - это типо REPL Read-eval-print loop — простая интерактивная среда программирования.Подробнее… с гуем. Для не шарящих - попробуйте и сразу поймёте.  Создать проект XCode.  Открыть проект из  репозитория Репозиторий, хранилище - место, где хранятся и поддерживаются какие-либо данные. Чаще всего данные в репозитории хранятся в виде файлов, доступных для дальнейшего распространения по сети.Подробнее….Жмем “Create a new XCode project” и видим окно выбора типа приложения, которое мы будем создавать. Тут на самом деле представлены шаблоны, с помощью которых можно быстро накидать разные типы приложений. По названиям и картинкам легко догадаться, какие приложения создают эти шаблоны.  Мы же не выебываемся и идем с нуля, поэтому жмакаем на “Single View Application”.Дальше заполняем инфу о приложении и ставим галочку Use Core Data. Понадобится в дальнейшем, а пока забей.И вуаля! У нас есть приложуха, которая ничего не умеет. Чтобы запустить её, нужно кликнуть по кнопке.Шаг 2. Разрешаем уведомлять.Дальше нам нужно разрешить приложению использовать уведомления. Для этого обратимся к методу registerUserNotificationSettings класса UIApplication. В файле AppDelegate.swift есть функция application которая выполняется как раз после запуска нашего приложения. Важный момент. Здесь идет только запуск приложения, не факт, что оно полностью запустится до того момента как функция начнет выполнятся. Это то самое место, где мы можем задать настройки приложения и сказать ему, что оно будет отсылать уведомления. Метод registerUserNotificationSettings на вход принимает объект UIUserNotificationSettings (будет репрессирован в iOS 10  ) . У этого объекта два поля: types и categories.В types указывается типы уведомлений, которые разрешается использовать. В нашем случае Sound и всплывающее окошко Alert. Есть ещё Badges. Это такие красные кружочки с циферками над иконкой приложения.В categories указываются категории с Actions. Действиями, которые можно выполнить при просмотре уведомления. Ну типо там “Открыть приложение”, “Отложить будильник на 5 минут” и т.д. А так как действия могут быть разными в зависимости от ситуации, то для этого и нужны категории. Здесь пока ничего не будем указывать, займемся созданием категорий и самих действий позже.На основе вышесказанного, неоходимо добавить следующий код в функцию application в файле AppDelegate.swift. В метод registerUserNotificationSettings передаём объект UIUserNotificationSettings с типами Sound и Alert. В категории передаём nilfunc application(application: UIApplication, didFinishLaunchingWithOptions launchOptions:     [NSObject: AnyObject]?) -&gt; Bool {        application.registerUserNotificationSettings(UIUserNotificationSettings(        forTypes: [.Sound, .Alert], categories: nil))            return true }Теперь при запуске увидим запрос на разрешение отсылать уведомления из нашего приложения. Супер.Шаг 3. Кодим мышкой раз.Теперь идем в файл Main.storyboard. Тут мы видим внешний вид нашего приложения. Дважды жмем в визуальном редакторе на View Controller. Перед глазами у вас должно быть что-то типо этого.Немного разберём интерфейс.  Файловый менеджер  Окно работы с файлами .storyboard. Кодинг мышкой.  Всевозможные настройки и свойства объектов. Кодинг мышкой. Для дальнейшего удобства перейдите на 4-ую вкладку (как на скриншоте), и выберите Size = iPhone 5.5-inch.  Каталог элементов (View).Листаем наш каталог и мышкой вытаскиваем оттуда два объекта: Button и DatePicker. Размещаем как душе угодно в визуальном редакторе. Дальше идём в правый верхний угол и жмём на два кружочка. Появляется текстовый редактор с открытым файлом ViewController.swift. Мало места? Побалуйся здесь.Шаг 4. Кодим мышкой два.Теперь самое интересное. Лично я не люблю IDE, потому что иногда они творят какую-то магию. Как например дальше. Зажмите кнопку Alt и зажмите кнопку мыши на объекте DatePicker. Перетащите мышку в текстовый редактор. За мышкой должна вести синяя линия. Отпустите мышку перед функцией viewDidLoad().Вылезет следующее окно.Заполняем имя и жмем Connect. Дальше туже процедуру повторяем с кнопкой, только в пункте Connection выбираем Action. И вставляем лучше это куда-нибудь в конец. После функции didReceiveMemoryWarning() например.Что же сейчас сделали? Мы связали визуальное представление объектов с кодом приложения. Эта связь описывается в файле Main.storyboard, который по своей сути является обычным XML файлом. То есть сначала связали DatePicker с каким-то именем (в моем случае DataSet) и добавили обработчик (у меня SetAlarm) на кнопку.Шаг 5. Обрабатываем нажатие на кнопку.Теперь заполним кодом наш обработчик. Тут на самом деле всё просто. Сначала создаём объект уведомления. Потом задаём ему определенные свойства. Например сообщение, которое выводится в уведомлении (alertBody), мелодия (soundName) и наконец дату (fireDate), когда это уведомление вызвать. Мелодию надо закинуть в проект, простым перетаскиванием из Finder в файловый менеджер XCode. Дату вызова берем из объекта DatePicker (DataSet.date). После всего добавляем наше уведомление в так называемое “расписание” телефона c помощью scheduleLocalNotification(). Теперь оно не зависит от работоспособности самого приложения и вызовется по указанной дате. В итоге код обработчика нажатия на кнопку будет следующий:    @IBAction func SetAlarm(sender: AnyObject) {        let notification:UILocalNotification = UILocalNotification()        notification.alertBody = \"Hello!\"        notification.soundName = \"police-car.mp3\"        notification.fireDate = DataSet.date        UIApplication.sharedApplication().scheduleLocalNotification(notification)    }Шаг 6. Тестируем.А теперь тестируем! Выставляем дату (например на минуту вперёд). Жмем на кнопку. Выходим из приложения (⌘⇧H), ждём, видим и слышим :) Тип уведомления можно изменить в настройках.ИтогДанный пост станет абсолютно бесполезным через месяц (а я как раз через месяц и хотел закончить цикл постов). Пусть это будет мне уроком. Но я хоть потренировался в написании технотекстов и немножко прокачал блог (всплывающие подсказки и подсвечивание областей картинок). Хотя тут ещё писать и писать, а для полного подробного объяснения ещё очень далеко. Ну да ладно. Спасибо, что читаете. Всего доброго, не болейте!P.S. Для быстрого старта рекомендую курс c Udemy.com “The Complete IOS 9 Swift 2.0 Guide - Make 20 Applications”. Кто ищет бесплатно, тот всегда найдет .                                    "
}, 

{
"id": "-2016-07-11-toyota",
"title": "Тойота-Маша-Недоверяша",
"author": null,
"tags": ["library"],
"url": "/2016/07/11/toyota/",
"date": "2016-07-11",
"content": "  Все как могли убивали время, и только Михалыч его жалел и непробиваемо лежал на диване.Сегодня расскажу вам об одном любопытном произведеньице. Как я уже писал в предыдущем посте, то читательский опыт у меня скудный (теперь вот исправляюсь), а то что читал давным-давно - попса для детей типа Гарри Поттера, детективов из серии “Черный котёнок” или книг Дэна Брауна.С “Тойоты-кресты” Тарковского я открыл для себя новую литературу. Назову её интимной наверн. Таких близких и ностальгических чувств я пока не ощущал ни разу. Книга о Сибири, сибирских людях, любви ( которой нет :) ) и…машинах. Пристегнитесь.Кто такой Джон Голт Михалыч?Основа повествования безобразно простая, как и герои. Михалыч, у которого два младших брата. Один из них кинооператор Андрей, который приехал с Москвы, чтобы снять фильм о Сибири с Михалычем в главной роли, другой - водитель/перегонщик (об этой прелестной “профессии” позже) Женя - главный герой повести, которого хорошо описывает одна единственная цитата:  Михалыч знал, что Женя разных пассажиров возит по-разному: женщин попугивая, чтоб казалось, что рисково, мужиков – пружинисто и расчетливо, если опаздывали в аэропорт, а встреченных – плавно, с заботой, исключающей пролив водки. Сейчас он вел для себя.Так вот. Кинооператор Андрей приехал не один, нам сразу подробно описывают двух коллег, но акцент конечно же на девушке по имени Маша. Женя (тот что водитель) сразу же проявляет к ней интерес и, как говорится, завертелось. Собственно ничего необычного. Книга совсем не об этой паре. Она о неторопливой сибирской жизни.  – Сколько же это мы ехать будем?– А мы и не торопимся. Мы в Сибири.Там, где ты живешь, забыли, что у орла две головы.Из личного опыта поездок на запад России скажу - люди там другие (что на самом деле неудивительно). Проявляется везде и по мелочи. Но у них стойкое убеждение к зауралью, как к месту не пригодному для цивилизованной жизни и развития. За примерами далёко ходить не надо. Буквально вчера, сидя в гостинице, слушал пьяные истории мужика-машиниста из Воронежа о том, что у нас тут жизни нет. И что его не на шутку напугали медведи, во время одного рейса по БАМ (Байкало-Амурская магистраль).В повести прослеживается противопоставление Запада и Востока страны. Выражается это через ту самую парочку. Через Машу и Женю. И стоит заметить, что это противопоставление нисколько не обидное и грубое, а скорее милое и доброе. Но иногда герои пытаются разойтись в пламенные речи.  И еще, что у вас там ничего не знают о России. Вам кажется, что, чем дальше от Москвы, тем жизнь слабее, и сначала действительно вроде как провал, а потом начинается совсем другое. Оно может быть и скудней, и голодней, но как-то святей, крепче… А вы так далеко от всего этого, не по расстоянию, конечно, а по духу, что если вдруг какой-нибудь остров сорвет с якоря штормом и поднесет к устью Невы, то там его не узнают.Верните мне мой 2009Пока читал, постоянно накрывали воспоминания. Для меня, как для человека, далёкого от темы автомобилей, книга оказалась близкой. Вот почему.Повесть опубликована в 2009 году. В это время я ещё ходил в школу и жил в одном далёком военном городке (посёлке) в Усольском районе. Не смотря на скромные размеры в пол квадратного километра, размер отпечатка в моей памяти оказался неисправимо больше.И как раз в то время у нас помешались на перегоне автомобилей с “Владика”. Так называют Владивосток (замечу, что на Западе “Владиком” называют город Владимир). В то время перед домом можно было заметить чуть ли треть машин с транзитными номерами. И у каждой обклеен как минимум бампер. Это для защиты от камней, потому что расстояния большие, а дороги никакие. Ради перегона местные военнослужащие брали отпуск! За это время гоняли во Владивосток, покупали машину, привозили её и продавали на Иркутском рынке. В то время военнослужащих не забрасывали деньгами. На “перегоне” сложно много заработать, но популярность у такого вида деятельности была большая.Чтобы пригнать нормальную машину, нужно конечно же в этом разбираться, тогда был бум сайта Drom.ru. Взрослые говорили об автомобилях везде и, в связи с потребностью детей подражать взрослым, их чада тоже стали это обсуждать. В школе гремели споры. “Какая машина круче? Надька? Да ты чего. У меня батя скоро Харька привезёт, вот это зверь!”.Обыденные разговоры. Повесть переполнена ими. Диалоги реалистичны и не содержат  глубокого смысла. Доходит до того, что надо пару раз перечитывать и представлять ситуацию в голове, чтобы понять, что подразумевает автор. А потом и вовсе читаешь бессмысленные потоки слов. Настолько бессмысленные, настолько же и милые до жути.  – Сейчас ты – как самолет перед посадкой.– И что он делает?– Шевелит закрылками.– Я пошевелила закрылками? Ты все время надо мной смеешься. А ты… разве не шевелишь?Это как пересказывать смешную историю из жизни, но пересказанная она не уже не кажется смешной, потому что надо быть Там. Или иметь хорошее воображение.РезюмеПоначалу тяжело читается. Приходится действительно напрягать воображение, чтобы понять, о чем беседуют герои. Так же книга наполнена любовью к сибирской природе (и просто любовью), много страниц с описанием красоты полей, Енисея, Саянских гор… Лично мне такое трудно даётся. Только ближе к середине меня захватило. И не отпускало до конца. Отдельный шедевр - 15 глава, улыбка у меня потом долго не сходила. Рекомендую прочитать повесть хотя бы ради неё."
}, 

{
"id": "-2016-07-11-slaves",
"title": "Quot servi tot hostes",
"author": null,
"tags": ["library"],
"url": "/2016/07/11/slaves/",
"date": "2016-07-11",
"content": "Не так давно я снова увлёкся чтением книг. До этого был чуть ли не пятилетний перерыв, когда я не читал ничего, кроме учебников. Но внезапно cлучилась пара человек, которые каким-то образом непроизвольно способстовали обратно вернуться к чтению.Начав свой путь как почтенный рабовладелец, вы закончите рабом.Стояли однажды с одногруппником в “Читай-городе” и на полке исторической литературы взгляд упал на книжку с вызывающим названием “Как управлять рабами”. Это книга об управлении, управленцах и подчиненных. Я скептически отношусь к подобной литературе. Но именно эта книга стала первой купленной мною за много лет. Честно сказать даже не знаю почему я её приобрёл. Название понравилось наверно.Подобных творений развелось тысячи. Как сказано в одном мнении в конце книги: “Вся эта мукулатура - рынок начинающих неудачников и студенток факультетов менеджмента.” Но эта книга оказалась не такой простой. Для разогрева посыплю на вас немного цитатами. Взял себе привычку выписывать понравившиеся мысли.  Вы думаете, что рабом является только тот, кого держат в рабстве? Есть сколько угодно свободных, с которыми обращаются, как с рабами.  На самом деле где-то глубоко внутри все мы - рабы. Кто-то - раб секса, другой - раб денег, третий безудержно стремится к славе, будучи её рабом, четвертый - невольник высокого статуса. Все мы - рабы надежды и страха.  Я знаю одного известного римского гражданина, который настолько не был способен к самоограничению и настолько потерял свое достоинство, что приставил к себе раба, который за обедом удерживал его за руку, если он поглощал слишком много пищи. Вот уж позор-то: он скорее готов повиноваться рабу, чем самому себе.“Сатурналий” или “Кто автор на самом деле?”Автором сия руководства обозначается римский патриций (в Древнем Риме так называли аристократиков), рабовладелец Марк Сидоний Фалкс. Гугл не даёт информации о нём, как исторической личности. Ну и по ходу часто возникают сомнения в истинности существования этого человека из-за его слишком современных взглядов на мир. Конечно, я ни в коем случае не обвиняю во лжи Джерри Тонера. Я хочу сказать, что во время чтения меня не покидало ощущение, что данная книга, если и существовала в древнеримском варианте, то скорее всего доработана и переписана с расчетом на сегодняшние реалии.Кстати о личности самого Джерри Тонера. Книга и гугл говорят о том, что он профессор в Кембридже, руководитель исследований по научной филологии, доктор наук (диссертация по античной литературе), а после защиты 10 лет посвятил инвестиционному менеджменту и управлял активами в 15 миллиардов долларов. Сейчас же курирует учебу студентов программ MBA и EMBA. Не то филолог-античник, не то бизнесмен.Построено повествование следующим образом: после каждой главы Фалкса, Джерри Тонер комментирует происходящее в ней и приводит источники упомянутых рассказов, баек и фактов. Но бывает, что границы размываются, и уже труднее увидеть в главах Фалкса римского патриция, а в комментариях Джерри Тонера - филолога-античника. Наступает Сатурналий.Сколько рабов, столько враговИменно так переводится заголовок поста. Фалкс с самого начала не строит каких-либо иллюзий. Он понимает, что рабы это те же люди, просто обстоятельства так сложились и они родились/стали рабами, ну что поделать? И из этого следует, что они как и все люди, стремятся к свободе. Рассматривать эту книгу можно с разных сторон. Первая - как историческая справка о рабстве в Древнем Риме. Вторая - руководство для менеджеров.Если первое, то Фалкс в некотором роде перевернул для меня представление о Древнем Риме (скорее всего сформированное поп-культурой и школьными знаниями истории). Казавшееся примитивным социальное устройство и мышление древних римлян оказалось не таким уж примитивным. Он от начала и до конца не устаёт повторять: “Мы, конечно, должны обращаться с ними справедливо”. И тут же добавляет: “И это несмотря на то, что рабы, конечно, являются не более чем рабочими инструментами”. И иногда нужно проявлять жестокость к тем, кто этого по их мнению действительно заслуживает. В книге множество примеров чересчур жестокого обращения с рабами. И конечно можно узреть и весь примитивизм правосудия в то время, когда раба пытали до тех пор, пока он не говорил то, что от него хотели услышать. Правду захотели? Какой вздор!С точки зрения познавательного исторического чтива можно узнать так же расценки на рабов (да да, пора откладывать, мой маленький диктатор), места для покупки и нюансы выбора лучшего раба для твоих целей. Не знаю на сколько это всё достоверно, но занимательно.Если же рассматривать эту книгу как руководство для менеджеров, то тут тоже непонятки. Видны параллели с современным миром. Не сказал бы, что получил какие-то откровения в этом плане. Автор постоянно повторяет незыблемые истины, только они звучат в древнеримском ключе:  Кстати, когда я собирался занять важный пост, мне кто-то дал ценный совет: самое важное, что нужно делать, - это запоминать имена людей, даже рабов: Ничто иное не сделает вас таким популярным и приятным для публики.  Слуги тоскуют по своим старым хозяевам только тогда, когда столкнулись с новыми.  Все свободные римляне фактически являлись политическими рабами императора.Фалкс часто говорит, что мы все в этом мире рабы. Некоторых читателей такое, возможно обидит. Но на правду же не обижаются :) Вначале поста приведены несколько цитат на эту тему. Если вам неприятно чувствовать себя рабом, не огорчайтесь, а действуйте.  От того, что вам не нравится быть рабом, вы несчастны. Но от этого вы не перестане быть рабом.Не забывайте, что у каждого раба есть шанс на лучшую жизнь! Если раб добросовестно выполнял свою работу, то он имел не иллюзорный шанс получить свободу у своего хозяина и стать вольнотпущенником. Потом замутить какой-нибудь прибыльный бизнес и закончить жизнь красиво, напоследок попортив жизнь уже собственным рабам. И это я не шучу. Судя по книге, такие случаи не были исключительными.Что делает раба рабом?Свобода. Далекая перспектива получить её… В ней и кроется основной мотив раба выполнять свои обязанности. Это ли лучший совет, который хочет получить современный топ-менеджер? Не слышал я, чтоб в современных компаниях работникам обещали свободу за хорошую работу. Ну так что же в этой книге такого полезного для менеджера? На самом деле ничего сверх полезного…Но совокупность множества простых истин, которые были актуальны и 2000 лет назад, заставляют подумать. Подумать о том, в каком мире мы живем, и что основа межличностных отношений не меняется уже очень давно. Не стоит об этом забывать.Но не смотря на все сходства, современный мир что-то потерял.  В те времена каждый ясно сознавал свое место, пусть даже место в очереди на казньНо всё же приобрел гораздо больше (в справедливости правосудия уж точно). Не стоит боятся и бежать от страшного слова “раб”.  Но если у вас всё же трясутся поджилки и хочется убежать от этой грустной правды, то это бесполезно. Фалкс приводит несколько замечательных методов поимки беглецов. Самый забавный из них приведу ниже.  Если ничто из вышеописанного не помогло, вы можете прибегнуть к магии и наложить на беглеца заклинание, хотя я не могу сказать, что поддерживаю это суеверное поведение.РезюмеКнига хорошая. Как развлекательно-познавательная - очень хорошая. Но в остальном…даже не знаю. Только замечу, что иногда полезно освежить в голове прописные истины. А то в суматохе повседневности о них зачастую можно и позабыть."
}, 

{
"id": "-2016-01-22-hello_everyone",
"title": "Hello everyone!",
"author": null,
"tags": ["emacs", "music", "jekyll", "golang", "library", "prog", "java", "ios", "android", "guitar", "clojure", "offtop", "php", "python", "swift"],
"url": "/2016/01/22/hello_everyone/",
"date": "2016-01-22",
"content": "Всем привет!Я наконец-то сделал это! Завёл собственный бложик, который могу вести прямо в #emacs без привязки к какому-либо сервису с тяжкой возможностью кастомизации. Да ещё и без капельки серверного кода. Как я это сделал? Есть такая замечательная штука как #jekyll. Про него есть хорошая статья на Хабре. Когда сам полностью разберусь во всей магии, которую творит это чудо, обязательно напишу пост. Вкратце Jekyll - генератор СТАТИЧЕСКИХ сайтов. Свой твиттер сделать на нем конечно вряд ли получится, но блог - запросто! (Jekyll и позиционируется как генератор блогов). Свой кусочек в пучине интернета я позиционирую как ненавязчивые разговоры сразу и обо всём, но с максимальными подробностями на сложных темах. В первую очередь - это заметки для самого себя, которые помогут в будущем не наступать на те же грабли. Ну и я считаю, что грех не делиться таким. К тому же, в отличие от твиттера, блог читают добровольно :))0) В дополнение ко всему прочему, у меня на носу курсач, который надо наполнять словами. А блог - отличное место научиться этому.Идея блога ко мне пришла от постоянного возмущения высококомерию технарей, которые пишут статьи/документацию но при этом упускают мелочи, которые для автора может быть и очевидны, но мы то с вами знаем, что это не так. Я ни в коему случае не претендую на мастера объяснений, но я буду очень стараться, обещаю.Итак, первым же постом хочу сразу же определить теги, которые я планирую использовать + краткое описание. Поехали!#emacsОписание/восхваление/признание в любви лучшему в мире текстовому редактору! Тонкости настройки .emacs, используемые и неиспользуемые плагины, бесконечные рассказы о том, что емакс может заменить вам все программы на компьютере. Надеюсь когда-нибудь и мой дорогой читатель (если такой вдруг появится) перейдет на эту прелесть и обратится в веру его святейшества Столлмана#music #guitarСпонтанные посты о музыке и новые открытия в этом удивительном мире, который я как никогда прочувствовал в прошлом году. Разговоры о песнях, периодические посты о прогрессе в обучении игры на гитаре, возможно c рассказами о возникших трудностях.#jekyllРассказы о технической стороне блога. Что и как работает, что и как поменялось или поменяется. В планах полностью переписать текущий шаблон и добавить возможность отслеживать читаемые книги.#prog #golang #java #ios #android #php #clojure #python #swiftВсё что связано с программированием. Нытьё, рецепты, моя борьба с фреймворками и мобильными платформами. Всё тут. Скорее всего это будет самая частая рубрика. Буду стараться писать по любой проблеме.#libraryБиблиотека. Книги которые я читал, читаю и буду читать. Ну и отзывы без спойлеров в комплекте. Тут всё просто.#offtopТег на всякий случай.До скорой встречи, не болейте!Фото взяты с форума Demiart"
}

]
